#version 330 core
in vec3 position;
in vec3 normal;
out vec3 v_diffuse;
//out vec4 vertexColor; 
uniform mat4 M;
uniform mat4 itM;
uniform mat4 V;
uniform mat4 P;
uniform vec3 u_light_pos;
void main(){
//vertexColor = vec4(clamp(position, 0.0, 1.0), 1.0);
vec4 frag_coord = M*vec4(position, 1.0);
gl_Position = P*V*frag_coord;
vec3 norm = vec3(itM * vec4(normal, 1.0));
vec3 L = normalize(u_light_pos - frag_coord.xyz);
float diffusion = max(0.0, dot(norm, L));
v_diffuse = vec3(diffusion);
}